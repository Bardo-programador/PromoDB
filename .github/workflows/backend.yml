name: CI Backend
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:

  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Clone do código
        uses: actions/checkout@v3

      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Instalar o Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configura cache do Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}


      - name: Instalar os pacotes e dependedências
        run: | 
          poetry install 

      - name: Executar testes
        run: |
          poetry run pytest promodb/tests
      
      
      - name: Gerar TAG com data e hora
        id: datetime
        run: echo "TAG=$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Login no DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build e Push da imagem Docker do backend
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/promodb_back:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/promodb_back:${{ env.TAG }}
